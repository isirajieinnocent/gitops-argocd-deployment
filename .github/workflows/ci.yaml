name: CI/CD for Helm + ArgoCD App-of-Apps

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]

permissions:
  contents: write
  security-events: write

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Cache Docker layers
        uses: actions/cache@v3
        with:
          path: /tmp/.buildx-cache
          key: ${{ runner.os }}-buildx-${{ github.sha }}
          restore-keys: |
            ${{ runner.os }}-buildx-

      - name: Login to GHCR
        run: echo "${{ secrets.GHCR_TOKEN }}" | docker login ghcr.io -u "${{ secrets.GHCR_USERNAME }}" --password-stdin

      - name: Build and push image
        uses: docker/build-push-action@v4
        with:
          context: ./src/app
          push: true
          tags: |
            ghcr.io/${{ secrets.GHCR_USERNAME }}/time-printer:latest
            ghcr.io/${{ secrets.GHCR_USERNAME }}/time-printer:${{ github.sha }}
          cache-from: type=local,src=/tmp/.buildx-cache
          cache-to: type=local,dest=/tmp/.buildx-cache-new
          sbom: true
          provenance: true

      - name: Move new cache
        run: |
          rm -rf /tmp/.buildx-cache
          mv /tmp/.buildx-cache-new /tmp/.buildx-cache

  update-helm-values:
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Clone Helm repo and configure Git
        run: |
          git clone https://github.com/isirajieinnocent/gitops-argocd-deployment.git helm-repo
          cd helm-repo
          git config isirajieinnocent "GitHub Actions"
          git config isirajieinnocent@gmail.com "actions@github.com"

      - name: Update image tag in values.yaml
        run: |
          cd helm-repo
          yq e '.image.tag = "${{ github.sha }}"' -i src/helm/my-app/values.yaml
          git add src/helm/my-app/values.yaml
          git commit -m "Update image tag to ${{ github.sha }}"
          git push

  sync-argocd:
    runs-on: ubuntu-latest
    needs: update-helm-values
    steps:
      - name: Install ArgoCD CLI
        run: |
          curl -sSL -o argocd https://github.com/argoproj/argo-cd/releases/latest/download/argocd-linux-amd64
          chmod +x argocd
          sudo mv argocd /usr/local/bin/

      - name: Login and sync ArgoCD
        run: |
          argocd login ${{ secrets.ARGOCD_SERVER }} --username ${{ secrets.ARGOCD_USERNAME }} --password ${{ secrets.ARGOCD_PASSWORD }} --insecure
          argocd app sync time-printer
          argocd app wait time-printer --health --timeout 300

  security:
    runs-on: ubuntu-latest
    needs: build
    steps:
      - uses: actions/checkout@v3

      - name: Log in to GHCR
        run: echo "${{ secrets.GHCR_TOKEN }}" | docker login ghcr.io -u "${{ secrets.GHCR_USERNAME }}" --password-stdin

      - uses: aquasecurity/trivy-action@master
        with:
          image-ref: "ghcr.io/${{ secrets.GHCR_USERNAME }}/time-printer:${{ github.sha }}"
          format: "sarif"
          output: "trivy-results.sarif"
          ignore-unfixed: true
          severity: HIGH,CRITICAL

      - name: Upload SARIF
        uses: github/codeql-action/upload-sarif@v3
        with:
          sarif_file: "trivy-results.sarif"

  notify:
    runs-on: ubuntu-latest
    needs: sync-argocd
    steps:
      - name: Notify Slack
        uses: rtCamp/action-slack-notify@v2
        env:
          SLACK_WEBHOOK: ${{ secrets.SLACK_WEBHOOK }}
          SLACK_COLOR: good
          SLACK_TITLE: "Helm App Deployed"
          SLACK_MESSAGE: |
            *App:* time-printer
            *Tag:* `${{ github.sha }}`
            *Chart Repo:* `${{ secrets.HELM_REPO }}`
            *Synced via:* ArgoCD App-of-Apps ðŸš€
